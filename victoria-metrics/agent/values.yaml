image:
  repository: victoriametrics/vmagent
  tag: "v1.93.1"
  pullPolicy: IfNotPresent

deployment:
  enabled: true
  strategy: {}

statefulset:
  enabled: false
  clusterMode: false
  replicationFactor: 1
  updateStrategy: {}

nodeSelector:
  node-group: infra
replicaCount: 1

persistence:
  enabled: true
  accessModes:
    - ReadWriteOnce
  size: 1Gi
  annotations: {}
  extraLabels: {}
  existingClaim: ""
  matchLabels: {}

remoteWriteUrls:
  - http://vm-cluster-vminsert:8480/insert/0/prometheus

config:
  global:
    scrape_interval: 30s
  scrape_configs:
    - job_name: "mysql"
      scrape_interval: 30s
      metrics_path: '/metrics'
      static_configs:
        - targets: ['mysql-metrics:9104']

    - job_name: 'api'
      honor_labels: true
      kubernetes_sd_configs:
        - role: pod
      relabel_configs:
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
          action: keep
          regex: true
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
          action: replace
          target_label: __metrics_path__
          regex: (.+)
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_port, __meta_kubernetes_pod_ip]
          action: replace
          regex: (\d+);(([A-Fa-f0-9]{1,4}::?){1,7}[A-Fa-f0-9]{1,4})
          replacement: '[$2]:$1'
          target_label: __address__
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_port, __meta_kubernetes_pod_ip]
          action: replace
          regex: (\d+);((([0-9]+?)(\.|$)){4})
          replacement: $2:$1
          target_label: __address__
        - source_labels: [__meta_kubernetes_pod_node_name]
          action: replace
          target_label: node
        - source_labels: [__meta_kubernetes_pod_name]
          action: replace
          target_label: pod
        - source_labels: [__meta_kubernetes_pod_label_app]
          action: replace
          target_label: app

rbac:
  create: true
  pspEnabled: true
  annotations: {}
  extraLabels: {}
  namespaced: false

serviceAccount:
  create: true
  annotations: {}
  name:

podDisruptionBudget:
  enabled: false
  labels: {}

multiTenantUrls: []

extraArgs:
  envflag.enable: "true"
  envflag.prefix: VM_
  loggerFormat: json

env: []
extraLabels: {}
podLabels: {}
extraHostPathMounts: []
extraVolumes: []
extraVolumeMounts: []
extraContainers: []
podSecurityContext: {}
securityContext: {}

service:
  enabled: false
  annotations: {}
  extraLabels: {}
  clusterIP: ""
  externalIPs: []
  loadBalancerIP: ""
  loadBalancerSourceRanges: []
  servicePort: 8429
  type: ClusterIP

resources: {}
annotations: {}
podAnnotations: {}
tolerations: []
topologySpreadConstraints: []
affinity: {}
configMap: ""
priorityClassName: ""

serviceMonitor:
  enabled: false
  extraLabels: {}
  annotations: {}
  relabelings: []

ingress:
  enabled: false
  annotations: {}
  extraLabels: {}
  hosts: []
  tls: []
  pathType: Prefix

extraScrapeConfigs: []
extraObjects: []
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
containerWorkingDir: "/"